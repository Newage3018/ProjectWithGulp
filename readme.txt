Начинается новый проект Front-end:

1. на машинке должен быть установлен node.js( вместе с ним будет установлен и npm менеджер).
2. Создаем папку где будет размещаться проект, например 'project',  и переходим в нее.
3. Инициализируем проект, по-русски - это значит, создать файл package.json - на основании которого, осуществляется
загрузка необходимых зависимостей (пакетов npm, указанных в package.json на текущий момент и все что будет установливаться позже)
Инициализация проекта запускается командой npm init, после ответов на вопросы системы получаем в папке проекта файл package.json.
4. Теперь можно устанавливать любые зависимости - они пропишутся в файле package.json.
5. Устанавливаем GULP: npm install gulp --save-dev
6. Результатом установки становится появление папки node-modules, файла package-lock.json и модификации файла package.json.
7. Мы добавили —save-dev, что означает – добавить gulp как зависимость разработчика в package.json.
8. Создаем структуру папок проекта.https://webformyself.com/wp-content/uploads/2015/101/4.png.
9. Назначение gulpfile.js, в этом файле хранятся все настройки Gulp.
10.Require говорит Node.js проверить папку node_modules и найти там папку gulp. Если такая имеется, то ее содержимое записывается в переменную gulp. Теперь можно писать задачи Gulp с нашей переменной, т.е. использовать свойства и методы gulp.метод или  gulp.свойство
11. Базовый синтаксис задач (task-ов) для Gulp: gulp.task('task-name', function() { // код}); так описываем задачи, которые будем использовать в дальнейшем: 'task-name' наименование задач, function(){} - то что будем делать.
12. Как можно заметить, настоящая задача использует два дополнительных метода – gulp.src и gulp.dest. Gulp.src говорит, какой файл использовать для задачи, а gulp.dest указывает на папку, куда поместить файлы после завершения задачи.
13. С помощью плагина gulp-sass мы можем скомпилировать Sass в CSS. Установить этот плагин можно так же, как мы делали с помощью npm install. Также следует использовать флаг —save-dev, чтобы быть уверенными в том, что плагин добавился в devDependencies в файле package.json.
14. npm install gulp-sass --save-dev установка компилятора Sass в CSS.
15. Перед тем, как использовать плагин gulp-sass, его надо подключить, как мы делали это с Gulp с помощью require.
// подключаем gulp-sass
var sass = require('gulp-sass');
16. мы можем задать автоматический запуск нашей задачи sass при любом пересохранении файла с помощью метода «watching».
17. Давайте заставим Gulp обновлять страницу браузера при любом изменении .scss с помощью Browser Sync.
18. $ npm install browser-sync --save-dev -установка.
19. Чтобы наш Browser Sync мог вставлять новые стили в страницу браузера (обновлять CSS), нам потребуется слегка изменить задачу sass.
20.  Для живой перезагрузки нужно одновременно запустить две задачи, watch и browserSync.
21. 